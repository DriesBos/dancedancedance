html, body
  position: relative
  width: 100%
  min-height: 100%
  
body
  background: var(--theme-bg)
  color: var(--theme-type)
  display: flex
  justify-content: center
  align-items: flex-start
  padding: 0
  transition: padding-top 1s ease, padding-bottom 1s ease, color 1s ease, background 1s ease

  // Containers
  main
    position: relative
    display: flex
    flex-direction: column
    max-width: auto
    width: 100%
    // overflow: hidden
    border: 0 solid var(--theme-type) 
    border-radius: 0
    transition: border 1s ease, border-radius 1s ease, max-width 1s ease, color 1s ease, transform 1s ease
    will-change: border, border-radius, max-width, transform, color
    transform-style: preserve-3d
    & > .blok
      margin-top: -2px

.themeBackground
  position: fixed
  width: 100%
  height: 100vh
  top: 0
  left: 0
  transition: opacity 1s ease
  img
    width: 100%
    height: 100%
    object-fit: cover
    object-position: center

.side 
  position: absolute
  left: 0
  top: 0
  width: 100%
  height: 100%
  background: var(--theme-container)
  border: var(--border-width) solid var(--theme-type)
  will-change: transform, background, color, border
  pointer-events: none
  &_Top
    left: calc(0px - #{var(--border-width)})
    top: calc(0px - #{var(--border-width)})
    height: 700px
    width: calc(100% + 2 * #{var(--border-width)})
    transform: rotateX(90deg) rotateY(0deg) translateY(-700px) 
    transform-origin: 0 0

.blok
  position: sticky
  top: 0
  display: flex
  flex-direction: column
  border: var(--border-width) solid var(--theme-type)
  background-color: var(--theme-container)
  transition: border 1s ease, background-color 1s ease, color 1s ease, perspective 1s ease, perspective-origin 1s ease
  will-change: border, background-color, transform, opacity, color, perspective
  opacity: 0
  transform-style: preserve-3d
  perspective: 3000px
  perspective-origin: 0 0
  &.inactive
    display: none
  & > .blokSidePanels
    display: none

  .row
    display: flex
    flex-direction: row
    row-wrap: nowrap

    .column
      flex: 1
      text-align: left
      padding: var(--blok-padding)
      &[data-inactive='true']
        color: var(--theme-type-inactive)
        transition: color 1s ease
        will-change: color
      &-Empty
        @media (max-width: 800px)
          display: none
      &-Text
        --var: 0%
        min-width: 0 // Ellipsis hack
        a
          position: relative
          white-space: nowrap
          &::before
            content: ''
            position: absolute
            left: 0
            display: inline-block
            bottom: calc(0px - (#{var(--border-width)} / 2))
            top: 0
            width: var(--var)
            z-index: 0
            border-bottom: var(--border-width) solid var(--theme-type)
            will-change: width, border-bottom
          &:hover
            &::before
              @media ( hover: hover )
                animation: hyperHyperLink .66s ease
                animation-iteration-count: 1
      &-Image
        padding: 0
        img, video
          width: 100%
          height: auto
      &-Year
        flex-grow: 0
      &-Icons
        display: flex
        justify-content: flex-end
        align-items: center
        & > div 
          margin: 0 12.5px
          &:first-child
            margin-left: 0
          &:last-child
            margin-right: 0

  // Specific Bloks
  &-Head
    .column 
      &-Title
        flex-grow: 1
        @media (max-width: 800px)
          & > a:nth-child(2)
            display: none
      &-Icons
        user-select: none
  &-Filter
    padding-top: 160px
    .column
      &-Icons
        flex-grow: 1
    @media (max-width: 800px)
      .column:nth-child(n+3):not(.column-Icons)
        display: none
  &-Project
    transition: transform var(--transition-project)
    &:hover
      transform: translateY(-10rem)
      .imageContainer
        height: 10rem
    .row
      overflow: hidden
    .column
      &-Icons
        flex-grow: 1
    .imageContainer
      transition: height var(--transition-project)
      will-change: height, transform
      animation: projectImages 2000s linear infinite
      height: 0rem
      display: flex
      flex-direction: row
      flex-frap: nowrap
      justify-content: flex-start
      gap: 1px
      @media (max-width: 800px)
        animation: projectImages 500s linear infinite
      img
        height: 100%
        width: auto
        height: 10rem
    @media (max-width: 800px)
      .column:nth-child(n+3):not(.column-Icons)
        display: none 
.icon
  position: relative
  width: 25px
  height: 25px
  svg
    position: absolute
    top: 0
    left: 0
    height: 100%
    width: 100%
  &-Wide
    width: 50px
  &-High
    height: 50px
  &-Rotate
    transform: rotate(180deg)
  &-Footer
    cursor: pointer

// Specific Elements
.storeSwitcher
  display: flex
  align-items: center
  gap: .5rem
  & > div
    cursor: pointer
    padding: 4px 11px
    font-size: 11px
    border: var(--border-width) solid var(--theme-type)
    transition: border 1s ease, color 1s ease
    will-change: border, color
    border-radius: 1000px

//// SPACES
body
  // 2D
  &[data-space="2D"]
    padding: 0
    main
      max-width: 100%
      min-height: 100vh
    .blok
      border-left: 0
      border-right: 0
      &-Footer
        flex-grow: 1
        justify-content: flex-end
        border-bottom: 0
      &-Head
        border: 0
      &-Filter
        border-top: 0
  // 3D
  &[data-space="3D"]
    padding-top: calc(15rem + 10vmin)
    padding-bottom: 6rem
    main
      width: 88vw
      max-width: 1150px
      overflow: visible
      transition: border 1s ease, border-radius 1s ease, max-width 1s ease, color 1s ease, transform .33s ease
      & > .blok
        transform-style: preserve-3d
        position: relative // TODO: remove and add sticky again (check stuttering)
        perspective-origin: 50% -1000px
        &-Project
          &:hover
            transform: translateY(0rem)
            .imageContainer
              height: 0
      & > .blok:first-child, & > .blok:nth-child(2) 
        .blokSidePanels
          display: inline-block
      & > .blok:first-child 
        z-index: +1
  // PHONE
  &[data-space="PHONE"]
    height: 100vh
    overflow: hidden
    align-items: center
    main
      max-width: 400px
      border: 10px solid var(--theme-type)
      border-radius: 36px
      flex-grow: 1
      overflow-y: auto 
      aspect-ratio: 9 / 19.5
      max-height: 90vh
    .blok
      border-left: 0
      border-right: 0
      &-Footer
        border-bottom: 0
      &-Head
        border: 0
        .column-Title
          & > a:nth-child(2)
            display: none
      &-Filter
        border-top: 0
        .column:nth-child(n+3):not(.column-Icons)
          display: none 
      &-Project
        .column:nth-child(n+3):not(.column-Icons)
          display: none 
      .column
        &-Empty
          display: none

  //// THEMES
  &[data-theme="BASIC"]
    .themeBackground
      opacity: 0
  &[data-theme="NIGHTMODE"]
    .themeBackground
      opacity: 0
  &[data-theme="IMAGE"]
    .themeBackground
      opacity: 1
  &[data-theme="TRON"]
    .themeBackground
      opacity: 0

//// Animations
@keyframes projectImages
  0%
    transform: translateX(0)
  100%
    transform: translateX(-100%)

@keyframes hyperLink
  0%
    width: 0%
  100%
    width: 100%

@keyframes hyperHyperLink
  0%
    width: 100%
    left: auto
    right: 0
  50%
    width: 0%
    left: auto
    right: 0
  51%
    width: 0%
    left: 0
    right: auto
  100%
    left: 0
    right: auto
    width: 100%

// .blok
//   min-height: 100px
//   width: 100%
//   opacity: 1 !important

// .testContainer
//   display: flex
//   flex-direction: column
//   &_2D
//     width: 100vw
//     position: absolute
//     left: 0
//     top: 0
//     rightl: 0
//     z-index: 1000
//   &_3D
//     width: 100vw


// .blokTest
//   position: relative
//   display: flex
//   border: var(--border-width) solid var(--theme-type)
//   background-color: var(--theme-container)
//   &_Row
//     display: flex
//     flex-direction: row
//     row-wrap: nowrap
//   &_Column
//     flex: 1
//     text-align: left
//     padding: var(--blok-padding)
//     &-Range
//       flex-grow: 1
//       width: 500px
//       gap: 1rem
//       display: flex
//       align-items: center
//       flex-wrap: nowrap
//       span
//         margin-left: 1rem
//       input[type=range]
//         flex-grow: 1
//         cursor: pointer
//         border-radius: 1000px
//         background: lightgrey
